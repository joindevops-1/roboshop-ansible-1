- name: Install Shipping component
  hosts: shipping
  become: yes
  vars:
    mysql_password: "RoboShop@1"
  tasks:
  - name: Install Maven
    ansible.builtin.dnf:
      name: maven
      state: installed

  - name: create user roboshop
    become: yes # we need sudo access for this task only
    ansible.builtin.user:
      name: roboshop

  - name: Recursively remove directory
    ansible.builtin.file:
      path: /app
      state: absent

  - name: create app directory
    ansible.builtin.file:
      path: /app
      state: directory

  - name: Download shipping and extract
    ansible.builtin.unarchive:
      src: https://roboshop-builds.s3.amazonaws.com/shipping.zip
      dest: /app
      remote_src: yes

  - name: maven package
    ansible.builtin.command: mvn clean package
    args:
      chdir: /app

  - name: rename jar file
    ansible.builtin.command: mv target/shipping-1.0.jar shipping.jar
    args:
      chdir: /app

  - name: copy shipping service
    ansible.builtin.copy:
      src: shipping.service
      dest: /etc/systemd/system/shipping.service

  - name: deamon reload
    ansible.builtin.systemd:
      daemon_reload: true

  - name: Install MySQL client
    ansible.builtin.yum:
      name: mysql
      state: installed

  - name: check schema exists or not
    ansible.builtin.shell: mysql -h mysql.daws76s.online -uroot -pRoboShop@1 -sN -e "SELECT COUNT(*) FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = 'mysql';"
    register: output

  - name: print output
    ansible.builtin.debug:
      msg: "Output: {{output}}"

  - name: load mysql schema
    ansible.builtin.shell: mysql -h mysql.daws76s.online -uroot -pRoboShop@1 < /app/schema/shipping.sql 
  
  - name: restart shipping
    ansible.builtin.service:
      name: shipping
      state: restarted
      enabled: true